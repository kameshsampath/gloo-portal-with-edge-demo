- name: "Create Kubernetes Cluster"
  google.cloud.gcp_container_cluster:
    name: "{{ gke_cluster_name }}"
    description: "Kameshs Gloo Demos Cluster"
    network: "{{ gcp_vpc_name }}"
    subnetwork: "{{ gcp_vpc_name }}-k8s-subnet"
    initial_node_count: 1
    ip_allocation_policy:
      create_subnetwork: no
      # pod secondary ip range
      cluster_secondary_range_name: "{{ gcp_vpc_name }}-pods-range"
      # services secondary ip range
      services_secondary_range_name: "{{ gcp_vpc_name }}-services-range"
      use_ip_aliases: yes
    release_channel:
      channel: "{{ gke_release_channel }}"
    # TODO Get this dynamically by query 
    location: "{{ gke_cluster_location }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: k8s_cluster

- name: "Create Kubernetes Cluster Node Pool"
  google.cloud.gcp_container_node_pool:
    name: "{{ gke_cluster_name }}-node-pool"
    initial_node_count: "{{ gke_cluster_node_size }}"
    cluster: "{{ k8s_cluster }}"
    config:
     disk_size_gb: "{{ gke_cluster_node_disk_size }}"
     machine_type: "{{ gke_cluster_node_type }}"
     tags:
      - gloo
    version: "{{ gke_kubernetes_version }}"
    location: "{{ gke_cluster_location }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: "Create Kubernetes Cluster Info"
  google.cloud.gcp_container_cluster_info:
    # TODO Get this dynamically by query 
    location: "{{ gke_cluster_location }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
  register: k8s_clusters

- name: "Extract {{ gke_cluster_name }} details "
  set_fact:
    k8s_cluster: "{{ k8s_clusters | community.general.json_query( gke_cluster_json_query) | first }}"

- name: "Set Kubeconfig facts"
  set_fact:
      gke_master_endpoint: "https://{{ k8s_cluster.endpoint }}"
      gke_master_ca: "{{  k8s_cluster.masterAuth.clusterCaCertificate }}"

- name: "Ensure kubeconfig directory"
  file:
    dest: "{{ work_dir }}/.kube"
    state: directory
    mode: 0744

- name: "Get Application Default Access Token"
  ansible.builtin.command:
     argv:
       - gcloud
       - auth 
       - application-default
       - print-access-token
       - "--format=json"
  register: access_token_json

# - debug:
#     msg: "{{ access_token_json.stdout | from_json }}"

- name: 'Set Kubeconfig facts'
  set_fact:
    token_expiry: "{{ access_token_json.stdout | from_json | community.general.json_query('expiry.datetime') }}"
    gke_access_token: "{{ access_token_json.stdout | from_json | community.general.json_query('token')  }}"

- name: "Save KubeConfig"
  template:
    dest: "{{ work_dir }}/.kube/gke_{{ gke_cluster_name }}.kubeconfig"
    src: "cluster-kubeconfig.yaml.j2"
    variable_start_string: '[['
    variable_end_string: ']]'
    mode: 0744
